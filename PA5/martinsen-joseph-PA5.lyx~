#LyX 2.2 created this file. For more info see http://www.lyx.org/
\lyxformat 508
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\begin_preamble
\usepackage{babel}
\end_preamble
\use_default_options false
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding iso8859-15
\fontencoding T1
\font_roman "times" "default"
\font_sans "helvet" "default"
\font_typewriter "courier" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry true
\use_package amsmath 1
\use_package amssymb 0
\use_package cancel 0
\use_package esint 1
\use_package mathdots 0
\use_package mathtools 0
\use_package mhchem 0
\use_package stackrel 0
\use_package stmaryrd 0
\use_package undertilde 0
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date true
\justification true
\use_refstyle 0
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 2.5cm
\topmargin 2.5cm
\rightmargin 2.5cm
\bottommargin 2.5cm
\headheight 0cm
\headsep 0cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
The Programming Assignment Report Instructions
\begin_inset Newline newline
\end_inset

 CSCE 221- PA5
\end_layout

\begin_layout Enumerate
The description of an assignment problem.
\begin_inset Newline newline
\end_inset

 
\begin_inset space \space{}
\end_inset


\begin_inset Newline newline
\end_inset

 The purpose of this programming assignment is to create a program to help
 record every students' grades in a spreadsheet roster.
 The online quiz platform can only export data about students who have taken
 the quiz.
 Students who decided to skip or not do the quiz are not listed.
 This program will output a sheet that incorporates the grade into the roster.
 
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Enumerate
The description of data structures and algorithms used to solve the problem.
\end_layout

\begin_deeper
\begin_layout Enumerate
Provide definitions of data structures by using Abstract Data Types (ADTs)
 
\begin_inset Newline newline
\end_inset

 
\end_layout

\begin_deeper
\begin_layout Enumerate

\series bold
HashTable
\series default
 - a data structure is an array of linked lists with mapped keys to values.
 
\end_layout

\begin_layout Standard
\begin_inset space \space{}
\end_inset


\begin_inset Newline newline
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
Write about the ADTs implementation in C++.
\begin_inset Newline newline
\end_inset

 
\begin_inset space \space{}
\end_inset


\begin_inset Newline newline
\end_inset

 The hash table was used to store the students UIN and associated quiz score.
 The UIN was hashed to create an index location.
 This location was then mapped to the associated quiz score.
 If there were collisions, the chaining method would be implemented.
 
\begin_inset Newline newline
\end_inset

 
\end_layout

\begin_layout Enumerate
Describe algorithms used to solve the problem.
\begin_inset Newline newline
\end_inset

 
\end_layout

\begin_deeper
\begin_layout Enumerate

\series bold
hash.hash()
\series default
 - this function was simply UIN modulo TableSize 
\end_layout

\begin_layout Enumerate

\series bold
hash.insert()
\series default
 - this function first determined the index position of the UIN by calling
 
\series bold
hash()
\series default
.
 Next, if the item at HashTable[index] did not contain a UIN, update that
 item with the new UIN and grade.
 Else if that item had already been filled, continue down that linked list
 until the end.
 Create a new item with the given grade and UIN.
 The prev item should be pointing to this new item in order to continue
 the linked list.
 
\end_layout

\begin_layout Enumerate

\series bold
hash.searchGrade()
\series default
 - First, create an index by hashing the UIN.
 Go to HashTable[index].
 Cycle through that linked list until UIN of that item matches the UIN being
 searched for.
 
\end_layout

\end_deeper
\begin_layout Enumerate
Analyze the algorithms according to assignment requirements.
 
\begin_inset Newline newline
\end_inset

 
\begin_inset space \space{}
\end_inset


\begin_inset Newline newline
\end_inset

 
\end_layout

\begin_deeper
\begin_layout Enumerate

\series bold
hash.hash()
\series default
 - 
\begin_inset Formula $O(1)$
\end_inset

 
\end_layout

\begin_layout Enumerate

\series bold
hash.insert()
\series default
 - 
\begin_inset Formula $O(1)$
\end_inset

 
\end_layout

\begin_layout Enumerate

\series bold
hash.searchGrade()
\series default
 - 
\begin_inset Formula $O(n)$
\end_inset

 where 
\begin_inset Formula $n$
\end_inset

 is the number of collisions at that index.
 
\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset

 
\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
A C++ organization and implementation of the problem solution 
\end_layout

\begin_deeper
\begin_layout Enumerate
Provide a list and description of classes or interfaces used by a program
 such as classes used to implement the data structures or exceptions.
\begin_inset Newline newline
\end_inset

 
\begin_inset space \space{}
\end_inset


\begin_inset Newline newline
\end_inset

 
\series bold
class hash
\series default
 - private variables consisted of a constant table size value.
 The hashtable consisting of item nodes was also included.
 Public functions consisted of Hashing a UIN, inserting an grade and UIN
 to the hash table, calculating number of items at an index, printing table
 information, and searching for a grade for an associated UIN.
 A item struct was also used which consisted of a UIN, grade, and pointer
 to the next item.
 
\begin_inset Newline newline
\end_inset

 
\end_layout

\begin_layout Enumerate
Include in the report the class declarations from a header file (.h) and
 their implementation from a source file (.cpp).
 
\begin_inset VSpace vfill
\end_inset

 
\end_layout

\begin_layout Enumerate
Provide features of the C++ programming paradigms like Inheritance or Polymorphi
sm in case of object oriented programming, or Templates in the case of generic
 programming used in your implementation.
 
\begin_inset Newline newline
\end_inset

 
\begin_inset space \space{}
\end_inset


\begin_inset Newline newline
\end_inset

 This program implemented one class and one structure.
 They are described above 
\begin_inset Newline newline
\end_inset

 
\end_layout

\end_deeper
\begin_layout Enumerate
A user guide description how to navigate your program with the instructions
 how to: 
\end_layout

\begin_deeper
\begin_layout Enumerate
compile the program: specify the directory and file names, etc.
\begin_inset Newline newline
\end_inset

 
\begin_inset space \space{}
\end_inset


\begin_inset Newline newline
\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
To compile the program type `make` to the terminal 
\begin_inset Newline newline
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
run the program: specify the name of an executable file.
 
\begin_inset Newline newline
\end_inset

 
\begin_inset space \space{}
\end_inset


\begin_inset Newline newline
\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
To run the program type make run
\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
Specifications and description of input and output formats and files 
\end_layout

\begin_deeper
\begin_layout Enumerate
The type of files: keyboard, text files, etc (if applicable).
 
\begin_inset Newline newline
\end_inset

 
\begin_inset space \space{}
\end_inset


\begin_inset Newline newline
\end_inset

 The input consisted of two files.
 One is a list of UINs, names, and quiz grade.
 This file is called input.csv.
 The other input file consisted of UINs and names called roster.csv.
 The output file is output.csv which has Name, UIN, and quiz grade if the
 student took the quiz 
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Enumerate
A file input format: when a program requires a sequence of input items,
 specify the number of items per line or a line termination.
 Provide a sample of a required input format.
 
\begin_inset Newline newline
\end_inset

 
\begin_inset space \space{}
\end_inset


\begin_inset Newline newline
\end_inset

 Example: "Echo Wells,accumsan.neque@acmetus.com,800000079,94" 
\begin_inset Newline newline
\end_inset

 
\end_layout

\end_deeper
\begin_layout Enumerate
Test your program for correctness using valid, invalid, and random inputs
 (e.g., insertion of an item at the beginning, at the end, or at a random
 place into a sorted vector).
 Include evidence of your testing, such as an output file or screen shots
 with an input and the corresponding output.
 
\begin_inset Newline newline
\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename pa5img.png
	scale 40

\end_inset

 
\end_layout

\end_inset


\end_layout

\end_deeper
\end_body
\end_document
